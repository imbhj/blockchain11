// function(예약어) 함수이름(매개변수) { 코드의 내용 }

/*
    function(예약어): 함수 선언을 위한 예약어 => ES5문법.
    showMessage: 함수의 이름. 이름은 자유롭게 작성 가능함.
    ()매개변수: 함수에 전달된 데이터를 받을 수 있는 부분. 이 예시에서는 매개변수가 아직 없음.
    {}: 함수의 본문을 감싸는 중괄호, 이 안에 함수가 실행될 때 필요한 코드가 들어갑니다.
    => 함수 스코프
*/

// let, const: 블록 스코프를 따르며, 블록 스코프 및 함수 스코프 내부에서 유효 
// => 블록 스코프 및 함수 스코프 내에서도 접근 범위가 제한됨.
// var: 함수 스코프를 따름 => 함수 스코프에서 접근 범위가 제한됨.

{
   {
    {
        {
            // let a = 1;
            var a = 1;
        }
    }
   }
}

// console.log(a);


// console.log("hello showMessage")를 출력하는 함수를 만들어보겠습니다.

// 함수의 호출과 선언.

// 함수의 선언 문법 => 나는 showMessage라는 함수를 "선언"하였다. 
// => 함수에 작성한 우리의 코드를 "실행"할려면 함수의 "호출"이 필요함
function showMessage() {
    // 지역변수 : 지역 스코프({}으로 가두어진)내에서 선언된 변수.
    // 이 변수는 선언된 범위 내에서만 "유효"합니다.
    let b = 1 + 1;
    console.log(b);
    console.log("hello showMessage");
}
// 함수의 호출 문법 => 나는 showMessage라는 함수를 "호출"하였다.
showMessage();

/*
    스코프: 변수의 유효 범위 => 접근이 되느냐, 안되느냐의 범위 => 영역구분
*/

